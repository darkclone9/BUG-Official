rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Check if user has a specific role in their roles array
    function hasRole(role) {
      return isSignedIn() &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             (role in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles);
    }

    // Check if user is President or Co-President
    function isPresidentOrCoPresident() {
      return hasRole('president') || hasRole('co_president');
    }

    // Users collection
    match /users/{userId} {
      // Anyone can read user profiles (for leaderboards, player lists, etc.)
      allow read: if true;

      // Users can create their own profile during signup
      // Allow creation if authenticated AND the userId matches the auth UID
      allow create: if request.auth != null && request.auth.uid == userId;

      // Users can update their own profile, admins can update any profile
      allow update: if isOwner(userId) || isAdmin();

      // Only admins can delete users
      allow delete: if isAdmin();
    }

    // Tournaments collection
    match /tournaments/{tournamentId} {
      // Anyone can read tournaments
      allow read: if true;

      // Only admins can create, update, or delete tournaments
      allow create, update, delete: if isAdmin();
    }

    // Events collection
    match /events/{eventId} {
      // Admins can read all events
      // Non-admins can only read published events
      allow read: if isAdmin() || resource.data.status == 'published';

      // Only admins can create, update, or delete events
      allow create, update, delete: if isAdmin();
    }

    // Points transactions collection
    match /points_transactions/{transactionId} {
      // Users can read their own transactions, President/Co-President can read all
      allow read: if isOwner(resource.data.userId) || isPresidentOrCoPresident();

      // Only President and Co-President can create, update, or delete transactions
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // Points settings collection
    match /points_settings/{settingId} {
      // Anyone can read points settings
      allow read: if true;

      // Only President and Co-President can modify settings
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // ============================================
    // STORE CREDIT SYSTEM
    // ============================================

    // Store credit settings collection
    match /store_credit_settings/{settingId} {
      // Authenticated users can read store credit settings
      allow read: if isSignedIn();

      // Only President and Co-President can modify settings
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // Store credit transactions collection
    match /store_credit_transactions/{transactionId} {
      // Users can read their own transactions, admins can read all
      allow read: if isSignedIn() &&
                     (resource.data.userId == request.auth.uid || isAdmin());

      // Only server can write transactions (via Cloud Functions or API routes)
      // No direct client writes allowed for security
      allow create, update, delete: if false;
    }

    // Store credit multipliers collection
    match /store_credit_multipliers/{multiplierId} {
      // Authenticated users can read multipliers
      allow read: if isSignedIn();

      // Only President and Co-President can create, update, or delete multipliers
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // Welcome credit promotions collection
    match /welcome_credit_promotions/{promotionId} {
      // Authenticated users can read promotions
      allow read: if isSignedIn();

      // Only President and Co-President can create, update, or delete promotions
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // Welcome credit recipients collection
    match /welcome_credit_recipients/{recipientId} {
      // Authenticated users can read recipients
      allow read: if isSignedIn();

      // Only server can write recipients (via Cloud Functions or API routes)
      allow create, update, delete: if false;
    }

    // Store credit giveaways collection
    match /store_credit_giveaways/{giveawayId} {
      // President/Co-President can read all giveaways
      allow read: if isPresidentOrCoPresident();

      // Only President and Co-President can create, update, or delete giveaways
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // ============================================
    // PROMOTIONS & CAMPAIGNS (LEGACY POINTS)
    // ============================================

    // Points multipliers collection
    match /points_multipliers/{multiplierId} {
      // President/Co-President can read all multipliers
      // Non-admins can only read active multipliers
      allow read: if isPresidentOrCoPresident() || resource.data.isActive == true;

      // Only President and Co-President can create, update, or delete multipliers
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // Welcome bonuses collection
    match /welcome_bonuses/{bonusId} {
      // President/Co-President can read all bonuses
      // Non-admins can only read active bonuses
      allow read: if isPresidentOrCoPresident() || resource.data.isActive == true;

      // Only President and Co-President can create, update, or delete bonuses
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // Sales promotions collection
    match /sales_promotions/{promotionId} {
      // President/Co-President can read all promotions
      // Non-admins can only read active promotions
      allow read: if isPresidentOrCoPresident() || resource.data.isActive == true;

      // Only President and Co-President can create, update, or delete promotions
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // Point giveaways collection
    match /point_giveaways/{giveawayId} {
      // President/Co-President can read all giveaways
      // Non-admins can only read active giveaways
      allow read: if isPresidentOrCoPresident() || resource.data.isActive == true;

      // Only President and Co-President can create, update, or delete giveaways
      allow create, update, delete: if isPresidentOrCoPresident();
    }

    // ============================================
    // SHOP COLLECTIONS
    // ============================================

    // Shop products collection
    match /shop_products/{productId} {
      // Admins can read all products (including inactive)
      // Non-admins can only read active products
      allow read: if isAdmin() || resource.data.isActive == true;

      // Only admins can create, update, or delete products
      allow create, update, delete: if isAdmin();
    }

    // Shop orders collection
    match /shop_orders/{orderId} {
      // Users can read their own orders, admins can read all orders
      allow read: if isOwner(resource.data.userId) || isAdmin();

      // Users can create their own orders (during checkout)
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;

      // Only admins can update or delete orders
      allow update, delete: if isAdmin();
    }

    // Shop cart collection (optional - for persistent carts)
    match /shop_carts/{userId} {
      // Users can read and write their own cart
      allow read, write: if isOwner(userId);
    }

    // ============================================
    // ANNOUNCEMENTS & BROADCASTS
    // ============================================

    // Announcements collection
    match /announcements/{announcementId} {
      // Admins can read all announcements
      // Non-admins can only read active announcements
      allow read: if isAdmin() || resource.data.isActive == true;

      // Only admins can create or delete announcements
      allow create, delete: if isAdmin();

      // Admins can update any field
      // Authenticated users can update only readBy and dismissedBy fields
      allow update: if isAdmin() ||
                      (isSignedIn() &&
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readBy', 'dismissedBy']));
    }

    // Broadcasts collection
    match /broadcasts/{broadcastId} {
      // Admins can read all broadcasts
      // Non-admins can only read active broadcasts
      allow read: if isAdmin() || resource.data.isActive == true;

      // Only admins can create or delete broadcasts
      allow create, delete: if isAdmin();

      // Admins can update any field
      // Authenticated users can update only readBy and dismissedBy fields
      allow update: if isAdmin() ||
                      (isSignedIn() &&
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readBy', 'dismissedBy']));
    }

    // ============================================
    // NOTIFICATIONS
    // ============================================

    // Notifications collection
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if isOwner(resource.data.userId);

      // Users can update their own notifications (mark as read)
      allow update: if isOwner(resource.data.userId);

      // Admins can create notifications for any user
      allow create: if isAdmin();

      // Users can delete their own notifications
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }

    // ============================================
    // ADMIN COLLECTIONS
    // ============================================

    // Admin users collection
    match /admin_users/{userId} {
      // Only admins can read admin user data
      allow read: if isAdmin();

      // Only admins can create, update, or delete admin users
      allow create, update, delete: if isAdmin();
    }

    // Admin logs collection
    match /admin_logs/{logId} {
      // Only admins can read logs
      allow read: if isAdmin();

      // System can create logs (via server-side code)
      allow create: if true;

      // No one can update or delete logs
      allow update, delete: if false;
    }

    // Role change logs collection
    match /role_change_logs/{logId} {
      // Only admins can read role change logs
      allow read: if isAdmin();

      // Only admins can create role change logs
      allow create: if isAdmin();

      // No one can update or delete logs
      allow update, delete: if false;
    }

    // ============================================
    // USER STATS & REGISTRATIONS
    // ============================================

    // User stats collection
    match /user_stats/{userId} {
      // Anyone can read user stats (for leaderboards)
      allow read: if true;

      // Users can create their own stats during signup
      allow create: if request.auth != null && request.auth.uid == userId;

      // Only admins can update or delete user stats
      allow update, delete: if isAdmin();
    }

    // Tournament registrations collection
    match /tournament_registrations/{registrationId} {
      // Users can read their own registrations, admins can read all
      allow read: if isOwner(resource.data.userId) || isAdmin();

      // Users can create their own registrations
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;

      // Only admins can update or delete registrations
      allow update, delete: if isAdmin();
    }

    // Event registrations collection
    match /event_registrations/{registrationId} {
      // Users can read their own registrations, admins can read all
      allow read: if isOwner(resource.data.userId) || isAdmin();

      // Users can create their own registrations
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;

      // Only admins can update or delete registrations
      allow update, delete: if isAdmin();
    }

    // Event notifications collection
    match /event_notifications/{notificationId} {
      // Users can read notifications for events they're registered for
      allow read: if isSignedIn();

      // Only admins can create, update, or delete event notifications
      allow create, update, delete: if isAdmin();
    }

    // Pickup queue collection
    match /pickup_queue/{queueId} {
      // Users can read their own pickup queue items, admins can read all
      allow read: if isOwner(resource.data.userId) || isAdmin();

      // System can create pickup queue items (via server-side code)
      allow create: if true;

      // Only admins can update or delete pickup queue items
      allow update, delete: if isAdmin();
    }

    // ============================================
    // MESSAGING & SOCIAL FEATURES
    // ============================================

    // Conversations collection
    match /conversations/{conversationId} {
      // Users can read conversations they are part of
      allow read: if isSignedIn() &&
                     request.auth.uid in resource.data.participants;

      // Users can create conversations
      allow create: if isSignedIn() &&
                       request.auth.uid in request.resource.data.participants;

      // Participants can update conversation metadata (last message, unread counts)
      allow update: if isSignedIn() &&
                       request.auth.uid in resource.data.participants;

      // Only admins can delete conversations
      allow delete: if isAdmin();
    }

    // Messages collection
    match /messages/{messageId} {
      // Users can read messages from their conversations
      allow read: if isSignedIn();

      // Users can create messages in conversations they're part of
      allow create: if isSignedIn() &&
                       request.resource.data.senderId == request.auth.uid;

      // Users can update their own messages (for editing)
      allow update: if isSignedIn() &&
                       resource.data.senderId == request.auth.uid;

      // Users can delete their own messages, admins can delete any
      allow delete: if isSignedIn() &&
                       (resource.data.senderId == request.auth.uid || isAdmin());
    }

    // Message Notifications collection
    match /message_notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if isSignedIn() &&
                     resource.data.recipientId == request.auth.uid;

      // System can create notifications
      allow create: if isSignedIn();

      // Users can update their own notifications (mark as read)
      allow update: if isSignedIn() &&
                       resource.data.recipientId == request.auth.uid;

      // Users can delete their own notifications
      allow delete: if isSignedIn() &&
                       resource.data.recipientId == request.auth.uid;
    }

    // Tournament Messages collection
    match /tournament_messages/{messageId} {
      // Anyone can read tournament messages
      allow read: if true;

      // Only tournament participants can create messages
      allow create: if isSignedIn() &&
                       request.resource.data.userId == request.auth.uid;

      // Users can update their own messages (for editing)
      allow update: if isSignedIn() &&
                       resource.data.userId == request.auth.uid;

      // Users can delete their own messages, admins can delete any
      allow delete: if isSignedIn() &&
                       (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Achievements collection (user achievements)
    match /achievements/{achievementId} {
      // Anyone can read achievements
      allow read: if true;

      // Only admins can create, update, or delete achievements
      allow create, update, delete: if isAdmin();
    }

    // Stickers collection (user stickers/badges)
    match /stickers/{stickerId} {
      // Anyone can read stickers
      allow read: if true;

      // Only admins can create, update, or delete stickers
      allow create, update, delete: if isAdmin();
    }

    // ============================================
    // DEFAULT DENY
    // ============================================

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
